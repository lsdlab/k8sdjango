version: '3'
services:
  db:
    image: postgres:11.5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.hostname == SmartMP02]
    environment:
      POSTGRES_USER: k8sdjango_production
      POSTGRES_PASSWORD: b8n2maLRb7EUyv8c
      POSTGRES_DB: k8sdjango_production
    ports:
      - '5432:5432'
    volumes:
      - ./compose/postgres_data:/var/lib/postgresql/data
      - ./compose/postgresql.conf:/usr/local/etc/postgresql/11/postgresql.conf
      - ./compose/pg_hba.conf:/usr/local/etc/postgresql/11/pg_hba.conf

  redis:
    image: redis:5.0.5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.hostname == SmartMP02]
    ports:
     - '6379:6379'
    volumes:
      - ./compose/redis_data:/data
    depends_on:
      - "db"

  rabbitmq:
    image: rabbitmq:3.7.17
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.hostname == SmartMP03]
    # environment:
    #   RABBITMQ_DEFAULT_VHOST: /
    #   RABBITMQ_DEFAULT_USER: k8sdjangovhost
    #   RABBITMQ_DEFAULT_PASS: b8n2maLRb7EUyv8c
    ports:
      - '5672:5672'
      - '15672:15672'
      - '15674:15674'
    volumes:
      - ./compose/rabbitmq_data:/var/lib/rabbitmq
    depends_on:
      - "redis"

  nginx:
    image: nginx:1.16
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    volumes:
      - ./compose/nginx:/etc/nginx/conf.d
      - ./compose/static:/k8sdjango/static
      - ./compose/nginx_log:/var/log/nginx
    depends_on:
      - "web"

  web:
    build: .
    image: django-docker-web
    command: sh -c "wait-for db:5432 && python manage.py collectstatic --no-input && python manage.py migrate && gunicorn k8sdjango.wsgi --workers 5 --threads=2 --bind 0.0.0.0:8080"
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    environment:
      DJANGO_SETTINGS_MODULE: conf.production.settings
      TZ: Asia/Shanghai
    volumes:
      - ./compose/static:/k8sdjango/static
    depends_on:
      - "db"

  celery_worker:
    image: django-docker-web
    command: sh -c "wait-for rabbitmq:5672 && celery -A apps.celeryconfig worker --loglevel=info --autoscale=4,2"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      DJANGO_SETTINGS_MODULE: conf.production.settings
      TZ: Asia/Shanghai
    depends_on:
      - "db"
      - "redis"
      - "rabbitmq"
      - "web"
      - "nginx"

  celery_beat:
    image: django-docker-web
    command: sh -c "wait-for rabbitmq:5672 && celery -A apps.celeryconfig beat --loglevel=info"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      DJANGO_SETTINGS_MODULE: conf.production.settings
      TZ: Asia/Shanghai
    depends_on:
      - "db"
      - "redis"
      - "rabbitmq"
      - "web"
      - "nginx"
      - "celery_worker"
